@Library('migrationqe-automation-lib') _
pipeline{
    agent {
        label 'minikube-fedora35'
    }
    environment{
        TACKLE_USER = "admin"
        TACKLE_PASSWORD = "Passw0rd!"
    }
    stages{
        stage('Install & run minikube'){
            when{
                branch pattern: '^PR-.*$',
                comparator: 'REGEXP'
            }
            steps{
                script{
                    checkout scm
                    sh """ curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
                            chmod +x minikube
                            minikube_homedir=/usr/local/bin/
                            
                            sudo install minikube /usr/local/bin

                            minikube delete
                            sleep 20s
                            minikube start --driver=podman --memory=4g
                            minikube addons enable dashboard
                            minikube addons enable ingress
                            minikube addons enable olm
                            kubectl apply -f https://raw.githubusercontent.com/operator-framework/operator-lifecycle-manager/master/deploy/upstream/quickstart/crds.yaml
                            kubectl apply -f https://raw.githubusercontent.com/operator-framework/operator-lifecycle-manager/master/deploy/upstream/quickstart/olm.yaml

                            kubectl apply -f https://raw.githubusercontent.com/konveyor/tackle2-operator/main/tackle-k8s.yaml

                            while [ \$(kubectl get crd|grep tackle|wc -l) != 2 ]
                            do echo "Waiting for Tackle CRDs..."
                            sleep 5s
                            done

                            """

                            echo "Applying tackle CR"
                            tackle.applyTackleCR() //Tackle CR will be applied with using default password `Passw0rd!`.
                }
            }
        }
        stage('Run tackle api tests'){
            when{
                branch pattern: '^PR-.*$',
                comparator: 'REGEXP'
            }
            steps{
                script{
                    sh "pipenv run pip install -r requirements.txt"
                    env.TACKLE_URL = "http://"+sh(
                        script : 'minikube ip',
                        returnStdout: true
                    ).trim()
                    env.keycloakAdminPassword = sh(
                        script: "oc get secret tackle-keycloak-sso -nkonveyor-tackle -o jsonpath='{.data.admin-password}' | base64 -d",
                        returnStdout: true
                    ).trim()
                    sh "env"
                    ocp.pollRouteUntilReady(env.TACKLE_URL,15,30)
                    repo.checkout("https://gitlab.cee.redhat.com/mta-qe/tackle-api-tests-config.git","main")
                    sh "ls"
                    sh "sleep 40s" //Grace period after the application is serving correctly.
                    sh "pipenv run pytest -v --tc-file=$WORKSPACE/tackle-api-tests-config/config.json --tc-format=json"
                }
            }
        }
    }
    post{
        always{
            script{
                // cleanWs()
                echo "this will clean the workspace after use."
            }
        }
    }
}